apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: APP_NAME
  name: APP_NAME
  namespace: APP_NAMESPACE
spec:
  selector:
    matchLabels:
      app: APP_NAME
  replicas: 1
  template:
    metadata:
      labels:
        app: APP_NAME
    spec:
      serviceAccountName: SERVICE_ACCOUNT_NAME
      containers:
        - name: APP_NAME
          image: IMAGE_NAME
          imagePullPolicy: Always
          env:
            - name: CONJUR_AUTHN_TOKEN_FILE
              value: /run/conjur/access-token
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: conjur-connect
          volumeMounts:
            - mountPath: /run/conjur
              name: conjur-access-token
              readOnly: true
      initContainers:
        - image: cyberark/conjur-authn-k8s-client
          imagePullPolicy: Always
          name: authenticator
          env:
            - name: CONJUR_AUTHN_LOGIN
              value: HOST_ID
            - name: CONTAINER_MODE
              value: init
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: conjur-connect
          volumeMounts:
            - mountPath: /run/conjur
              name: conjur-access-token
            - mountPath: /etc/conjur/ssl
              name: conjur-client-ssl
      volumes:
        - name: conjur-access-token
          emptyDir:
            medium: Memory
        - name: conjur-client-ssl
          emptyDir:
            medium: Memory
---
apiVersion: v1
kind: Service
metadata:
  name: APP_NAME
  namespace: APP_NAMESPACE
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: TARGET_PORT
  selector:
    app: APP_NAME
---